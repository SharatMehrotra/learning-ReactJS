{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setdata] = useState(null);\n  const [isPending, setisPending] = useState(true);\n  const [error, seterror] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw Error('could not fetch data from server');\n        }\n\n        return response.json();\n      }).then(data => {\n        setdata(data);\n        setisPending(false);\n        seterror(null);\n      }).catch(err => {\n        seterror(err.message);\n        setisPending(false);\n      });\n    }, 1000);\n    return () => {\n      console.log('cleanup');\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"FVVKKlb326GSxHbzDS97cVbofRs=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/sharat/Documents/SHARAT/Github/learning-ReactJS/sharat-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setdata","isPending","setisPending","error","seterror","setTimeout","fetch","then","response","ok","Error","json","catch","err","message","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,MAAI;AACXC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACOC,QAAD,IAAc;AAChB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACZ,gBAAMC,KAAK,CAAC,kCAAD,CAAX;AACH;;AACD,eAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,OAND,EAOCJ,IAPD,CAOOR,IAAD,IAAS;AACXC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXD,EAYCQ,KAZD,CAYQC,GAAD,IAAQ;AACXT,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAfD;AAgBH,KAjBS,EAiBR,IAjBQ,CAAV;AAkBA,WAAO,MAAI;AAACa,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAAuB,KAAnC;AACH,GApBQ,EAoBP,CAAClB,GAAD,CApBO,CAAT;AAsBA,SAAO;AAACC,IAAAA,IAAD;AAAME,IAAAA,SAAN;AAAgBE,IAAAA;AAAhB,GAAP;AACH,CA3BD;;GAAMN,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import {useState,useEffect} from 'react';\nconst useFetch = (url) => {\n    const [data, setdata] = useState(null);\n    const [isPending, setisPending] = useState(true);\n    const [error, seterror] = useState(null);\n    useEffect(() => {\n        setTimeout(()=>{\n            fetch(url)\n            .then((response) => {\n                if(!response.ok){\n                    throw Error('could not fetch data from server')\n                }\n                return response.json()\n            })\n            .then((data) =>{\n                setdata(data);\n                setisPending(false);\n                seterror(null);\n            })\n            .catch((err) =>{\n                seterror(err.message);\n                setisPending(false);\n            })\n        },1000);\n        return ()=>{console.log('cleanup')}\n    },[url]);\n\n    return {data,isPending,error}\n}\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}